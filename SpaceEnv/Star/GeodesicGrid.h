/** @file
 *     剖分20面体
 */


#ifndef SA_GEODESICGRID_H_
#define SA_GEODESICGRID_H_

#include <osg/Vec3>

/** @class GeodesicGrid
 * Grid of triangles (zones) on the sphere with radius 1, generated by subdividing the
 * icosahedron.
 *  level 0: just the icosahedron, 20 zones
 *  level 1: 80 zones, level 2: 320 zones, ...
 * Each zone has a unique integer number in the range [0,getZonesCount()-1].
 * @{ */
class GeodesicGrid
{
public:
	/// The call back function type to visit the triangles.
	typedef bool (VisitFunc)(int lev, unsigned int index, const osg::Vec3 &c0,
			const osg::Vec3 &c1, const osg::Vec3 &c2, void *context);

	typedef int (VisitFunc2)(int lev, unsigned int index, const osg::Vec3 &c0,
			const osg::Vec3 &c1, const osg::Vec3 &c2, void *context, int value);

public:
	/// Construct a new GeodesicGrid with given max level.
    GeodesicGrid(int m_cnMaxLevel);

	/// Destructor
	~GeodesicGrid();

	/// Query the max level.
	inline int getMaxLevel() const
	{
        return m_cnMaxLevel;
	}

	/// Query the count of zones in this grid.
	inline int getZonesCount() const
	{
        return getZonesCount(m_cnMaxLevel);
	}

	/// Query the count of zones with given level.
	static inline int getZonesCount(int level)
	{
		return (20 << (level << 1));
	}

	/// Return the position of the 3 corners for the triangle at the given level and index
	void getTriangleCorners(int lev, int index, osg::Vec3 &c0, osg::Vec3 &c1,
			osg::Vec3 &c2) const;

	/// Return the index of the partner triangle with which to form a paralelogram
	int getPartnerTriangle(int lev, int index) const;

	/// Visit all triangles with given max level.
	void visitTriangles(int maxVisitLevel, VisitFunc *func,
			void *context) const;
	void visitTriangles(int maxVisitLevel, VisitFunc2 *func,
			void *context) const;

private:
	/// Triangle structure
	struct Triangle
	{
		osg::Vec3 e0, e1, e2;
	};
	Triangle **triangles;
    const int m_cnMaxLevel;

	const osg::Vec3 &getTriangleCorner(int lev, int index,
			int cornerNumber) const;

	void initTriangle(int lev, int index, const osg::Vec3 &c0,
			const osg::Vec3 &c1, const osg::Vec3 &c2);

	void visitTriangles(int lev, unsigned int index, const osg::Vec3 &c0,
			const osg::Vec3 &c1, const osg::Vec3 &c2, int maxVisitLevel,
			VisitFunc *func, void *context) const;

	void visitTriangles(int lev, unsigned int index, const osg::Vec3 &c0,
			const osg::Vec3 &c1, const osg::Vec3 &c2, int maxVisitLevel,
			VisitFunc2 *func, void *context, int value) const;
};
/** @} */

#endif /* SA_GEODESICGRID_H_ */
